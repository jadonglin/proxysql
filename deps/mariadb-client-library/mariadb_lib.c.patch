diff --git libmariadb/mariadb_lib.c libmariadb/mariadb_lib.c
index e8db51a0..684aff1a 100644
--- libmariadb/mariadb_lib.c
+++ libmariadb/mariadb_lib.c
@@ -1936,10 +1936,16 @@ restart:
 
   mysql->client_flag= client_flag;
 
-  if (run_plugin_auth(mysql, scramble_data, scramble_len,
-                             scramble_plugin, db))
-    goto error;
-
+  {
+    volatile my_bool net_blocking = ma_pvio_is_blocking(net->pvio);
+    if (!net_blocking)
+      ma_pvio_blocking(net->pvio, TRUE, 0);
+    if (run_plugin_auth(mysql, scramble_data, scramble_len,
+                              scramble_plugin, db))
+      goto error;
+    if (!net_blocking)
+      ma_pvio_blocking(net->pvio, FALSE, 0);
+  }
   if (mysql->client_flag & CLIENT_COMPRESS ||
       mysql->client_flag & CLIENT_ZSTD_COMPRESSION)
   {
@@ -2006,6 +2012,15 @@ restart:
   return(mysql);
 
 error:
+  // fix for proxysql bug #2623
+  if (mysql->net.extension) {
+    free(mysql->net.extension);
+    mysql->net.extension=NULL;
+  }
+  if (mysql->extension) {
+    free(mysql->extension);
+    mysql->extension=NULL;
+  }
   /* Free allocated memory */
   free(host_list);
   free(host_copy);
@@ -2087,7 +2102,7 @@ my_bool STDCALL mariadb_reconnect(MYSQL *mysql)
   if (!mysql_real_connect(&tmp_mysql,mysql->host,mysql->user,mysql->passwd,
 			  mysql->db, mysql->port, mysql->unix_socket,
 			  mysql->client_flag | CLIENT_REMEMBER_OPTIONS) ||
-      mysql_set_character_set(&tmp_mysql, mysql->charset->csname))
+      mysql_set_character_set(&tmp_mysql, mysql->charset->csname, 0))
   {
     if (ctxt)
       my_context_install_suspend_resume_hook(ctxt, NULL, NULL);
@@ -2134,10 +2149,11 @@ my_bool STDCALL mariadb_reconnect(MYSQL *mysql)
   return(0);
 }
 
-void ma_invalidate_stmts(MYSQL *mysql, const char *function_name)
+void ma_invalidate_stmts(MYSQL *mysql, const char *function_name __attribute__((unused)))
 {
   if (mysql->stmts)
   {
+    /*
     LIST *li_stmt= mysql->stmts;
 
     for (; li_stmt; li_stmt= li_stmt->next)
@@ -2146,6 +2162,7 @@ void ma_invalidate_stmts(MYSQL *mysql, const char *function_name)
       stmt->mysql= NULL;
       stmt_set_error(stmt, CR_STMT_CLOSED, SQLSTATE_UNKNOWN, 0, function_name);
     }
+    */
     mysql->stmts= NULL;
   }
 }
@@ -2458,6 +2475,42 @@ mysql_close(MYSQL *mysql)
   return;
 }
 
+void STDCALL
+mysql_close_no_command(MYSQL *mysql)
+{
+  if (mysql)                    /* Some simple safety */
+  {
+    if (mysql->methods) {
+      if (mysql->net.pvio) {
+        free_old_query(mysql);
+        mysql->status=MYSQL_STATUS_READY; /* Force command */
+         mysql->options.reconnect=0;
+        end_server(mysql);
+      }
+    }
+    mysql_close_memory(mysql);
+    mysql_close_options(mysql);
+    mysql->host_info=mysql->user=mysql->passwd=mysql->db=0;
+
+    // fix for proxysql bug #3204
+    if (mysql->net.extension) {
+      free(mysql->net.extension);
+      mysql->net.extension=NULL;
+    }
+
+    if (mysql->extension) {
+      free(mysql->extension);
+      mysql->extension=NULL;
+    }
+
+    /* Clear pointers for better safety */
+    bzero((char*) &mysql->options,sizeof(mysql->options));
+    mysql->net.pvio= 0;
+    if (mysql->free_me)
+      free(mysql);
+  }
+  return;
+}
 
 /**************************************************************************
 ** Do a query. If query returned rows, free old rows.
@@ -4237,18 +4290,27 @@ void STDCALL mysql_get_character_set_info(MYSQL *mysql, MY_CHARSET_INFO *cs)
   mariadb_get_charset_info(mysql, cs);
 }
 
-int STDCALL mysql_set_character_set(MYSQL *mysql, const char *csname)
+int STDCALL mysql_set_character_set(MYSQL *mysql, const char *csname, uint charsetnr)
 {
   const MARIADB_CHARSET_INFO *cs;
 
-  if (!csname)
+  if (!csname && !charsetnr)
     goto error;
 
-  if ((cs= mysql_find_charset_name(csname)))
+  if (csname) {
+    cs = mysql_find_charset_name(csname);
+  } else {
+    cs = mysql_find_charset_nr(charsetnr); 
+  }
+  if (cs)
   {
-    char buff[64];
+    char buff[128];
+    if (csname) { // default behavior
+      snprintf(buff, 127, "SET NAMES %s", cs->csname);
+    } else {
+      snprintf(buff, 127, "SET NAMES %s COLLATE '%s'", cs->csname, cs->name);
+    }
 
-    snprintf(buff, 63, "SET NAMES %s", cs->csname);
     if (!mysql_real_query(mysql, buff, (unsigned long)strlen(buff)))
     {
       mysql->charset= cs;
@@ -4258,8 +4320,9 @@ int STDCALL mysql_set_character_set(MYSQL *mysql, const char *csname)
   }
 
 error:
-  my_set_error(mysql, CR_CANT_READ_CHARSET, SQLSTATE_UNKNOWN,
-               0, csname, "compiled_in");
+  if (!cs)
+    my_set_error(mysql, CR_CANT_READ_CHARSET, SQLSTATE_UNKNOWN,
+                0, csname, "compiled_in");
   return(mysql->net.last_errno);
 }
 
